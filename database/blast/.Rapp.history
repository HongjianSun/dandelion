temp
uniqueCDR3.sub
a.dist
which(a.dist[a,]<=tr)
which(a.dist[1,]<=tr)
which(a.dist[2,]<=tr)
which(a.dist[3,]<=tr)
uniqueCDR3.sub[which(a.dist[3,]<=tr)]
uniqueCDR3.sub[which(a.dist[3,]<=tr), 1]
uniqueCDR3.sub[which(a.dist[3,]<=tr), ]
uniqueCDR3.sub[which(a.dist[3,]<=tr)]
uniqueCDR3.sub[1]
uniqueCDR3.sub[3]
uniqueCDR3.sub[2]
uniqueCDR3.sub[1]
a = 3#
sum(apply(data.frame(uniqueCDR3.sub[c(which(a.dist[a,]<=tr),a)]),1,function(x){length(grep(gsub("[*]","-",x),gsub("[*]","-",temp),perl=T))}))<length(intersect(c(which(a.dist[a,]<=tr),a),which(!is.na(a.dist[a,]))))
a = 2#
sum(apply(data.frame(uniqueCDR3.sub[c(which(a.dist[a,]<=tr),a)]),1,function(x){length(grep(gsub("[*]","-",x),gsub("[*]","-",temp),perl=T))}))<length(intersect(c(which(a.dist[a,]<=tr),a),which(!is.na(a.dist[a,]))))
a = 1#
sum(apply(data.frame(uniqueCDR3.sub[c(which(a.dist[a,]<=tr),a)]),1,function(x){length(grep(gsub("[*]","-",x),gsub("[*]","-",temp),perl=T))}))<length(intersect(c(which(a.dist[a,]<=tr),a),which(!is.na(a.dist[a,]))))
uniqueCDR3.sub
a.dist[a,]
a
a = 3
a.dist[a,]
which(a.dist[a,]<=tr
)
intersect(c(which(a.dist[a,]<=tr),a)
)
which(!is.na(a.dist[a,]
)
intersect(c(which(a.dist[a,]<=tr),a),which(!is.na(a.dist[a,])))
uniqueCDR3.sub[c(which(a.dist[a,]<=tr),a)]
temp
tr
uniqueCDR3.sub
which(a.dist[a,]<=tr)
uniqueCDR3length<-sort(as.numeric(unique(CDR3length)))#
      if(length(uniqueCDR3length)==1){ ### only 1 CDR3 length#
          temp<-vector()#
          uniqueCDR3.sub<-unique(test)#
          a.dist<-adist(unique(uniqueCDR3.sub))#
          a.dist[upper.tri(a.dist,diag = T)]<-NA#
          tr<-floor(uniqueCDR3length*(1-identity))#
          for(a in nrow(a.dist):1){#
            if(length(which(a.dist[a,]<=tr))>0){#
              if(a==nrow(a.dist) || sum(apply(data.frame(uniqueCDR3.sub[c(which(a.dist[a,]<=tr),a)]),1,function(x){length(grep(gsub("[*]","-",x),gsub("[*]","-",temp),perl=T))}))<length(intersect(c(which(a.dist[a,]<=tr),a),which(!is.na(a.dist[a,]))))){#
                temp<-c(temp,do.call(paste, c(as.list(uniqueCDR3.sub[c(which(a.dist[a,]<=tr),a)]), sep=", ")))
}
temp
test = c('CASDPPTAGDYGGGGDFDHW', 'CASDPPTAGDYGGGADFDYW', 'CASDPPTAGDYGGGSDLDYW')#
#
CDR3length <- apply(data.frame(test),1,function(x){nchar(x)})#
CDR3length#
# [1] 16 16 16 16 16 16 16 16 16 16 16 16#
uniqueCDR3length<-sort(as.numeric(unique(CDR3length)))#
uniqueCDR3length#
# [1] 16#
length(uniqueCDR3length)==1#
length(uniqueCDR3length)==1#
# [1] TRUE#
temp<-vector()#
uniqueCDR3.sub <- unique(test)#
# [1] "CAVPKDGSGWGTFHHW"#
a.dist<-adist(unique(uniqueCDR3.sub))#
a.dist#
#      [,1]#
# [1,]    0#
a.dist[upper.tri(a.dist,diag = T)]<-NA#
a.dist#
#      [,1]#
# [1,]   NA#
tr<-floor(uniqueCDR3length*(1-0.85))#
tr
for(a in nrow(a.dist):1){#
            if(length(which(a.dist[a,]<=tr))>0){#
              if(a==nrow(a.dist) || sum(apply(data.frame(uniqueCDR3.sub[c(which(a.dist[a,]<=tr),a)]),1,function(x){#
              	length(grep(gsub("[*]","-",x),gsub("[*]","-",temp),perl=T))}))<length(intersect(c(which(a.dist[a,]<=tr),a),which(!is.na(a.dist[a,]))))){#
                temp<-c(temp,do.call(paste, c(as.list(uniqueCDR3.sub[c(which(a.dist[a,]<=tr),a)]), sep=", ")))}}}
temp
test = c('CARFAYGSGNFYIGDQIFDFW', 'CARGGRNYYDSGGFYPQELYW', 'CARWAAICERGDCYTVSFDYW', 'CAKWAAICESGDCYEVSFDYW')#
#
CDR3length <- apply(data.frame(test),1,function(x){nchar(x)})#
CDR3length#
# [1] 16 16 16 16 16 16 16 16 16 16 16 16#
uniqueCDR3length<-sort(as.numeric(unique(CDR3length)))#
uniqueCDR3length#
# [1] 16#
length(uniqueCDR3length)==1#
length(uniqueCDR3length)==1#
# [1] TRUE#
temp<-vector()#
uniqueCDR3.sub <- unique(test)#
# [1] "CAVPKDGSGWGTFHHW"#
a.dist<-adist(unique(uniqueCDR3.sub))#
a.dist#
#      [,1]#
# [1,]    0#
a.dist[upper.tri(a.dist,diag = T)]<-NA#
a.dist#
#      [,1]#
# [1,]   NA#
tr<-floor(uniqueCDR3length*(1-0.85))#
tr#
# [1] 2#
for(a in nrow(a.dist):1){#
            if(length(which(a.dist[a,]<=tr))>0){#
              if(a==nrow(a.dist) || sum(apply(data.frame(uniqueCDR3.sub[c(which(a.dist[a,]<=tr),a)]),1,function(x){#
              	length(grep(gsub("[*]","-",x),gsub("[*]","-",temp),perl=T))}))<length(intersect(c(which(a.dist[a,]<=tr),a),which(!is.na(a.dist[a,]))))){#
                temp<-c(temp,do.call(paste, c(as.list(uniqueCDR3.sub[c(which(a.dist[a,]<=tr),a)]), sep=", ")))}}}
temp
test = readRDS("~/Documents/Clatworthy_scRNAseq/Ondrej/PIP/Pan_Immune_BCR/Pan_T7918901/NETWORK/filtered_contig_annotated_clones.RDS")
write.csv(test, 'bcrep.csv')
getwd()
dim(test)
test
log1p(0)
log1p(175)
-log1p(175)
-log1p(0)
1/0
1/165
library(igraph)
g <- barabasi.game(100, m=1)#
g <- delete_edges(g, E(g)[ 100 %--% 1 ])#
g2 <- barabasi.game(100, m=5)#
g2 <- delete_edges(g2, E(g2)[ 100 %--% 1])#
vertex_connectivity(g, 100, 1)#
vertex_connectivity(g2, 100, 1)#
vertex_disjoint_paths(g2, 100, 1)#
#
g <- sample_gnp(50, 5/50)#
g <- as.directed(g)#
g <- induced_subgraph(g, subcomponent(g, 1))#
cohesion(g)
library(igraph)
?simplify
changeo <- readrL::read_tsv('~/Documents/Clatworthy_scRNAseq/Ondrej/PIP/Pan_Immune_BCR/Pan_T7918901/dandelion/DATA/filtered_contig_annotated_igblast_clone.tabc')
changeo <- readrL::read_tsv('~/Documents/Clatworthy_scRNAseq/Ondrej/PIP/Pan_Immune_BCR/Pan_T7918901/dandelion/DATA/filtered_contig_annotated_igblast_clone.tab')
changeo <- readr::read_tsv('~/Documents/Clatworthy_scRNAseq/Ondrej/PIP/Pan_Immune_BCR/Pan_T7918901/dandelion/DATA/filtered_contig_annotated_igblast_clone.tab')
changeo
hangeo <- changeo %>% filter(FUNCTIONAL == 'TRUE')#
changeo$BARCODE <- gsub('_c.*', '', changeo$SEQUENCE_ID)#
changeo <- changeo %>% select(BARCODE, everything())
colnames(changeo) %in% c("CLONE_bcRep_IGH","CLONE_bcRep_IGHKL")
any(c("CLONE_bcRep_IGH","CLONE_bcRep_IGHKL") %in% colnames(changeo)
)
changeo[, -c("CLONE_bcRep_IGH","CLONE_bcRep_IGHKL") %in% colnames(changeo)]
c("CLONE_bcRep_IGH","CLONE_bcRep_IGHKL") %in% colnames(changeo)
changeo[, -(colnames(changeo) %in% "CLONE_bcRep_IGH","CLONE_bcRep_IGHKL")]
changeo[, -(colnames(changeo) %in% c("CLONE_bcRep_IGH","CLONE_bcRep_IGHKL"))]
(colnames(changeo) %in% c("CLONE_bcRep_IGH","CLONE_bcRep_IGHKL"))
changeo[, -which(colnames(changeo) %in% c("CLONE_bcRep_IGH","CLONE_bcRep_IGHKL"))]
changeo <- changeo[, -which(colnames(changeo) %in% c("CLONE_bcRep_IGH","CLONE_bcRep_IGHKL"))]
changeo
library('kelvinny')
test = pbpaste()
test
test[!grep('Rpl|Rps', test)]
grep('Rpl|Rps', test)
test[-grep('Rpl|Rps', test)]
test = pbpaste()
test[-grep('Rpl|Rps', test)]
test = pbpaste()
test[-grep('Rpl|Rps', test)]
test = pbpaste()
test[-grep('Rpl|Rps', test)]
test = pbpaste()
test[-grep('Rpl|Rps', test)]
exit
library(paletteer)
paletteer_d('LaCroixColoR:paired')
paletteer_d('LaCroixColoR::paired')
paletteer_d('LaCroixColoR::MurePepino')
?sort
paletteer_d('ggthemes::tableau_tableau')\
library(ggplot2)
?theme
?sample
library(kelvinny)
table(pbpaste())
sort(table(pbpaste()))
library(Seurat)
?VlnPlot
matrix(rexp(200, rate=.1), ncol=20)
matrix(rexp(200, rate=.1), ncol=10, nrow = 10)
A = matrix(rexp(200, rate=.1), ncol=10, nrow = 10)
B = matrix(rexp(200, rate=.1), ncol=10, nrow = 10)
A
B
colnames(A) <- paste0('Cell', 1:10)
rownames(A) <- paste0('Cell', 1:10)
rownames(b) <- paste0('Cell', 1:10)
rownames(B) <- paste0('Cell', 1:10)
colnames(B) <- paste0('Cell', 1:10)
A
diag(A) <- 0
diag(B) <- 0
Cell1
A
svd(A)
q()
library(reticulate)
usecondaenv('mypython3')
useconda_env('mypython3')
use_condaenv('mypython3')
A <- c(0,0,0,0,0,)
A <- c(0,0,0,0,0)
A
DF <- data.frame(A = A, B = A, C =A +1)
DF
DF$A
sc = import('scanpy')
sc$settings$verbosity = 3
test <- c('sample_1', 'sample_21', 'sample_23', 'sample_24')
test
gsub('sample_2*.', 'sample_2', test)
gsub('sample_2.*', 'sample_2', test)
genes <-  c('Hig1a', 'Srebf2', 'Slc2a1', 'Ldha', 'Acat1', 'Acly', 'Myc', 'Acaca', 'Hk1', 'Plin3', 'Cpt1b', 'Acsl1', 'Acacb', 'Pdlim1', 'Hk2', 'Gapdh')
library(biomaRt)
mart <- useMart("ensembl", dataset="mmusculus_gene_ensembl")#
		h2m <- getBM(attributes=c("external_gene_name", "hsapiens_homolog_associated_gene_name"), mart=mart)
h2m$hsapiens_homolog_associated_gene_name[h2m$extenal_gene_name %in% genes]
h2m$extenal_gene_name %in% genes
h2m$hsapiens_homolog_associated_gene_name[h2m$external_gene_name %in% genes]
kelvinny::pbcopy(h2m$hsapiens_homolog_associated_gene_name[h2m$external_gene_name %in% genes])
test <- readr::read_tsv('~/Documents/Clatworthy_scRNAseq/Ondrej/PIP/Pan_Immune_BCR/Pan_T7918901/dandelion/DATA/filtered_contig_annotated_igblast_clone.tab')
head(test)
test2 <- split(test, test$CELL)
test2
lapply(test2, function(x) table(x$LOCUS))
library(Seurat) # version 3.1#
library(dplyr)#
setwd('/home/jovyan/Lee_KJ_Kidney_10x_sep19/')#
#
# load in file#
lee <- readRDS(file = "./scanpy/out/Lee_291019.norm_sub_trimmed.rds")
lee <- readRDS('~/Documents/Clatworthy_scRNAseq/Lee_analysis/Lee_KJ_Kidney_10x_sep19/scanpy/out/Lee_291019.norm_sub_trimmed.rds')
FeaturePlot(lee, 'Gfral')
FeaturePlot(lee, features = 'Gfral')
grep('Gfra', row.names(lee), value = T)
?list.files()
library(Seurat)
?VlnPlot
library(Biostrings)
translate('TGTGTAAGATCACCACCTGCTTTCTCCTATTACGGTTTGGACGTCTGG')
library(seqinr)
translate('TGTGTAAGATCACCACCTGCTTTCTCCTATTACGGTTTGGACGTCTGG')
translate(tolower('TGTGTAAGATCACCACCTGCTTTCTCCTATTACGGTTTGGACGTCTGG'))
translate(s2c('TGTGTAAGATCACCACCTGCTTTCTCCTATTACGGTTTGGACGTCTGG'))
paste0(translate(s2c('TGTGTAAGATCACCACCTGCTTTCTCCTATTACGGTTTGGACGTCTGG')), collapse ='')
paste0(translate(s2c('TGTGTAAGATCACCACCTGCTTTCTCCTATTACGGTTTGGACGTCTGG')))
paste0(translate(s2c('TGTGTAAGATCACCACCTGCTTTCTCCTATTACGGTTTGGACGTCTGG')), collapse ='')
test = readr::read_tsv('~/Documents/Clatworthy_scRNAseq/Ondrej/PIP/Pan_Immune_BCR/Pan_T7918901/dandelion/data/filtered_contig_annotated_igblast_db_filtered.tab')
paste0(translate(s2c(test$JUNCTION), collapse ='')
)
paste0(translate(s2c(test$JUNCTION)), collapse ='')
changeo = test
for (x in 1:nrow(changeo)){#
      changeo$JUNCTION_AA[x] = paste0(translate(s2c(changeo$JUNCTION[x])), collapse ='')#
                               }
changeo$JUNCTION_AA <- NA#
    for (x in 1:nrow(changeo)){#
      changeo$JUNCTION_AA[x] = paste0(translate(s2c(changeo$JUNCTION[x])), collapse ='')#
                               }
changeo
changeo$JUNCTION_AA
q()
install.packages('parallel')
library(reticulate)
?reticulate
library(slingshot)
?getLine
?getCurves
slingshot::lines
?slingshot::lines
?slingCurve
?slingCurves
library(slingshot)
?slingshopt
?slingshot
source('~/Downloads/forkt.R', chdir = TRUE)
load('~/Downloads/forkt.RData')
ls
ls()
tmp
metadata = tmp
head(metadata)
labels = metadata[['Subcluster']]
labels
expr.df <- data.frame(label = label)
expr.df <- data.frame(label = labels)
expr.df
expr.df$labels
expr.df$label
expr.df$label <- factor(expr.df$label, levels = levels(droplevels(label)))
expr.df <- data.frame(label = label)
expr.df <- data.frame(label = labels)
expr.df
head(expr.df)
expr.df$label <- factor(expr.df$label, levels = levels(droplevels(labels)))
expr.df$label
meanExpr <- split(expr.df, expr.df$label)
meanExpr
meanExpr <- do.call(rbind, meanExpr)
label.list <- as.list(levels(labels))
label.list
library(ktplots)
?plot_cpdb
library(biostrings)
library(biostring)
library(Biostrings)
setwd('~/Downloads/')
s = readDNAStringSet('Homo sapiens constant.fa')
s
names = names(s)
names
grep('CH1', names)
s = s[grep('CH1', names),]
s
writeXStringSet(s, 'hsapiens.fasta')
s = readDNAStringSet('Homo sapiens constant.fa')
s = s[grep('CH1', names),]
writeXStringSet(s, 'hsapiens.fasta')
s = readDNAStringSet('hsapiens.fa')
s = readDNAStringSet('hsapiens.fasta')
s = readDNAStringSet('hsapiens.fasta')
s = s[grep('CH1', names),]
s = s[grep('CH1', names(s)),]
s = readDNAStringSet('hsapiens.fasta')
s = s[grep('CH1', names(s)),]
s = readDNAStringSet('hsapiens.fasta')
s = s[grep('CH1', names(s)),]
writeXStringSet(s, 'hsapiens.fasta')
setwd('~/Documents/Github/dandelion/')
setwd('database/blast/')
list.files()
s = readDNAStringSet('hsapiens_BCR_C_imgt-gapped.fasta')
s
writeXStringSet(s, 'hsapiens_BCR_C_imgt-gapped.fasta')
s = readDNAStringSet('hsapiens_BCR_C.fasta')
writeXStringSet(s, 'hsapiens_BCR_C.fasta')
