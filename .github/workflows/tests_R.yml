name: R-tests

on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - "master"

env:  
  cache-version: 'cache-v1'

jobs:
  R-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      max-parallel: 5
      matrix:
        # os: [ubuntu-latest, macos-latest, windows-latest]
        os: [windows-latest]
        python-version: [3.7, 3.8]        
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      NOT_CRAN: true
      TZ: UTC
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
    
    - name: Install windows system dependencies
      if: matrix.os != 'macos-latest'
      run: |
        sudo apt-get install libcurl4-openssl-dev
        sysreqs=$(Rscript -e 'cat("apt-get update -y && apt-get install -y", paste(gsub("apt-get install -y ", "", remotes::system_requirements("ubuntu", "20.04")), collapse = " "))')
        echo $sysreqs
        sudo -s eval "$sysreqs"

    - name: Set up R
      uses: r-lib/actions/setup-r@v1
      with:
          r-version: release

    - name: Setup pandoc from r-lib
      if: matrix.os != 'ubuntu-latest'
      uses: r-lib/actions/setup-pandoc@master

    - name: install R dependencies
      run: |
        install.packages(c('RCurl'))
      shell: Rscript {0}
    
    - name: Cache R packages
      if: "!contains(github.event.head_commit.message, '/nocache') && matrix.os != 'ubuntu-latest'"
      uses: actions/cache@v2
      with:
        path: ${{ env.R_LIBS_USER }}
        key: ${{ env.cache-version }}-${{ matrix.os }}-biocversion-RELEASE_3_12-r-4.0-${{ hashFiles('.github/depends.Rds') }}
        restore-keys: ${{ env.cache-version }}-${{ matrix.os }}-biocversion-RELEASE_3_12-r-4.0-
