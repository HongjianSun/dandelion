name: gh-pages

on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - "*"

jobs:
  docs:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      max-parallel: 5
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.7]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # required for setuptools-scm
      - name: Fetch all tags s.t. get_version can retrieve the correct version.
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install macOS system dependencies
        if: matrix.os == 'macos-latest'
        run: |
          brew install cairo pkg-config pandoc autoconf automake libtool
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'
     
      - name: Cache conda
        uses: actions/cache@v1
        env:
          # Increase this value to reset cache if etc/example-environment.yml has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
            hashFiles('docs/environment.yml') }}
      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2.0.1
        with:
          auto-activate-base: true
          auto-update-conda : true
          activate-environment: dandelion
          channels: conda-forge, bioconda, anaconda, defaults
          channel-priority: true
          python-version: ${{ matrix.python-version }}
          environment-file: docs/environment.yml
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!
      - name: Install dependencies
        run: |
          python setup.py install
      - name: run sphinx
        run: |
          cd docs && make html SPHINXOPTS="-W --keep-going"
      - name: Get target folder for page deploy from github ref
        if: ( matrix.os == 'ubuntu-latest' ) &&  ( matrix.python-version == '3.7' )
        run: |
          # get rid of "refs/"
          tmp_target_dir=$(echo $github_ref | sed "s/^refs\///")
          echo $tmp_target_dir
          # get rid of "merge" at the end of ref for PRs
          if [[ $tmp_target_dir = pull/* ]]
          then
            tmp_target_dir=$(echo $tmp_target_dir | sed "s/\/merge$//")
          fi
          # when on master, we want to deploy to the root dir (-> ".")
          target_dir=$(echo $tmp_target_dir | sed "s/heads\/master/./")
          echo $target_dir
          echo "target_dir=$target_dir" >> $GITHUB_ENV
        env:
          github_ref: ${{ github.ref }}

      - name: Deploy to gh-pages
        if: ( matrix.os == 'ubuntu-latest' ) &&  ( matrix.python-version == '3.7' )
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: docs/_build/html # The folder the action should deploy.
          TARGET_FOLDER: ${{ env.target_dir }}
          CLEAN: true
          CLEAN_EXCLUDE: '["heads", "pull", "tags"]'
          SINGLE_COMMIT: true
          REPOSITORY_NAME: zktuong/dandelion